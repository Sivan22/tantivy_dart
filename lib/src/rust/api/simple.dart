// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

String greet({required String name}) =>
    RustLib.instance.api.crateApiSimpleGreet(name: name);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<IndexReader>>
abstract class IndexReader implements RustOpaqueInterface {
  Future<Searcher> searcher();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<IndexWriter>>
abstract class IndexWriter implements RustOpaqueInterface {
  Future<Opstamp> addDocument({required TantivyDocument document});
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MyIndex>>
abstract class MyIndex implements RustOpaqueInterface {
  factory MyIndex({required Schema schema, required String path}) =>
      RustLib.instance.api.crateApiSimpleMyIndexNew(schema: schema, path: path);

  IndexReader reader();

  IndexWriter writer({required BigInt heapSize, required BigInt numThreads});
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MySchemaBuilder>>
abstract class MySchemaBuilder implements RustOpaqueInterface {
  Future<void> addBoolField({
    required String name,
    required bool stored,
    required bool fast,
    required bool indexed,
  });

  Future<void> addFacetField({required String name});

  Future<void> addFloatField({
    required String name,
    required bool stored,
    required bool fast,
    required bool indexed,
  });

  Future<void> addIntegerField({
    required String name,
    required bool stored,
    required bool fast,
    required bool indexed,
  });

  Future<void> addTextField({
    required String name,
    required bool stored,
    required IndexRecordOption indexOption,
    required String tokenizerName,
  });

  Schema build();

  factory MySchemaBuilder() =>
      RustLib.instance.api.crateApiSimpleMySchemaBuilderNew();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Opstamp>>
abstract class Opstamp implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Schema>>
abstract class Schema implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner< Searcher>>
abstract class Searcher implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<TantivyDocument>>
abstract class TantivyDocument implements RustOpaqueInterface {}

enum IndexRecordOption { basic, withFreqs, withFreqsAndPositions }
