// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Facet>>
abstract class Facet implements RustOpaqueInterface {
  /// Create a Facet object from a string.
  /// Args:
  ///     facet_string (str): The string that contains a facet.
  ///
  /// Returns the created Facet.
  static Facet fromString({required String facetString}) => RustLib.instance.api
      .crateApiFacetFacetFromString(facetString: facetString);

  /// Returns true if another Facet is a subfacet of this facet.
  /// Args:
  ///     other (Facet): The Facet that we should check if this facet is a
  ///         subset of.
  bool isPrefixOf({required Facet other});

  /// Returns true if the facet is the root facet /.
  bool isRoot();

  /// Create a new instance of the "root facet" Equivalent to /.
  static Facet root() => RustLib.instance.api.crateApiFacetFacetRoot();

  /// Returns the list of `segments` that forms a facet path.
  ///
  /// For instance `//europe/france` becomes `["europe", "france"]`.
  List<String> toPath();

  /// Returns the facet string representation.
  String toPathStr();
}
